<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="yucca.source_manager.class">Yucca\Component\SourceManager</parameter>
        <parameter key="yucca.selector_manager.class">Yucca\Component\SelectorManager</parameter>
    </parameters>
    <services>
        <service id="yucca.entity_manager" class="Yucca\Component\EntityManager">
            <call method="setMappingManager">
                <argument type="service" id="yucca.mapping_manager"/>
            </call>
            <call method="setSelectorManager">
                <argument type="service" id="yucca.selector_manager"/>
            </call>

        </service>

        <service id="yucca.connection_manager" class="Yucca\Component\ConnectionManager">
            <argument>%yucca.connections%</argument>
        </service>

        <service id="yucca.schema_manager" class="Yucca\Component\SchemaManager">
            <argument>%yucca.schema%</argument>
            <call method="setConnectionManager">
                <argument type="service" id="yucca.connection_manager" />
            </call>
        </service>

        <service id="yucca.mapping_manager" class="Yucca\Component\MappingManager">
            <argument>%yucca.mapping%</argument>
            <call method="setSourceManager">
                <argument type="service" id="yucca.source_manager" />
            </call>
        </service>

        <!--

            Source

        -->
        <service id="yucca.source_manager" class="%yucca.source_manager.class%">
            <argument>%yucca.sources%</argument>
            <argument type="service" id="debug.stopwatch" on-invalid="null" />
            <argument type="service" id="yucca.data_collector.logger" on-invalid="null" />
        </service>

        <service id="yucca.source.data_parser" class="Yucca\Component\Source\DataParser\DataParser">
            <call method="setEntityManager">
                <argument type="service" id="yucca.entity_manager" />
            </call>
        </service>

        <!--

            Source Factory

        -->
        <service id="yucca.source_factory.database_single_row" class="Yucca\Component\SourceFactory\DatabaseSingleRowFactory">
            <tag name="yucca.source_factory" alias="database_single_row"/>
            <argument type="service" id="yucca.schema_manager" />
            <argument type="service" id="yucca.connection_manager" />
            <argument type="service" id="yucca.source.data_parser" />
        </service>

        <service id="yucca.source_factory.database_multiple_row" class="Yucca\Component\SourceFactory\DatabaseMultipleRowFactory">
            <tag name="yucca.source_factory" alias="database_multiple_row"/>
            <argument type="service" id="yucca.schema_manager" />
            <argument type="service" id="yucca.connection_manager" />
            <argument type="service" id="yucca.source.data_parser" />
        </service>

        <service id="yucca.source_factory.memcache" class="Yucca\Component\SourceFactory\MemcacheFactory">
            <tag name="yucca.source_factory" alias="memcache"/>
            <argument type="service" id="yucca.connection_manager" />
            <argument type="service" id="yucca.source.data_parser" />
        </service>

        <service id="yucca.source_factory.memcached" class="Yucca\Component\SourceFactory\MemcachedFactory">
            <tag name="yucca.source_factory" alias="memcached"/>
            <argument type="service" id="yucca.connection_manager" />
            <argument type="service" id="yucca.source.data_parser" />
        </service>

        <service id="yucca.source_factory.php_array" class="Yucca\Component\SourceFactory\PhpArrayFactory">
            <tag name="yucca.source_factory" alias="php_array"/>
            <argument type="service" id="yucca.source.data_parser" />
        </service>

        <service id="yucca.source_factory.chain" class="Yucca\Component\SourceFactory\ChainFactory">
            <tag name="yucca.source_factory" alias="chain"/>
            <argument type="service" id="yucca.source.data_parser" />
        </service>

        <!--

            Selector

        -->
        <service id="yucca.selector_manager" class="%yucca.selector_manager.class%">
            <argument>%yucca.selectors%</argument>
            <argument type="service" id="debug.stopwatch" on-invalid="null" />
            <argument type="service" id="yucca.data_collector.logger" on-invalid="null" />
        </service>

        <service id="yucca.selector.source_factory.database" class="Yucca\Component\Selector\SourceFactory\DatabaseFactory">
            <tag name="yucca.selector.source_factory" alias="database"/>
            <argument type="service" id="yucca.schema_manager" />
        </service>

        <service id="yucca.selector.source_factory.memcache" class="Yucca\Component\Selector\SourceFactory\MemcacheFactory">
            <tag name="yucca.selector.source_factory" alias="memcache"/>
            <argument type="service" id="yucca.connection_manager" />
        </service>

        <service id="yucca.selector.source_factory.memcached" class="Yucca\Component\Selector\SourceFactory\MemcachedFactory">
            <tag name="yucca.selector.source_factory" alias="memcached"/>
            <argument type="service" id="yucca.connection_manager" />
        </service>

        <service id="yucca.selector.source_factory.sphinx" class="Yucca\Component\Selector\SourceFactory\SphinxFactory">
            <tag name="yucca.selector.source_factory" alias="sphinx"/>
            <argument type="service" id="yucca.connection_manager" />
        </service>

        <service id="yucca.selector.source_factory.elastic_search" class="Yucca\Component\Selector\SourceFactory\ElasticSearchFactory">
            <tag name="yucca.selector.source_factory" alias="elastic_search"/>
        </service>

        <service id="yucca.selector.source_factory.chain" class="Yucca\Component\Selector\SourceFactory\ChainFactory">
            <tag name="yucca.selector.source_factory" alias="chain"/>
        </service>

        <service id="yucca.sharding_strategy.modulo" class="Yucca\Component\ShardingStrategy\Modulo">
            <tag name="yucca.sharding_strategy" alias="modulo"/>
        </service>

        <service id="yucca.connection_factory.doctrine" class="Yucca\Component\ConnectionFactory\DoctrineFactory">
            <tag name="yucca.connection_factory" alias="doctrine"/>
        </service>

        <service id="yucca.connection_factory.memcache" class="Yucca\Component\ConnectionFactory\MemcacheFactory">
            <tag name="yucca.connection_factory" alias="memcache"/>
        </service>

        <service id="yucca.connection_factory.memcached" class="Yucca\Component\ConnectionFactory\MemcachedFactory">
            <tag name="yucca.connection_factory" alias="memcached"/>
        </service>

        <service id="yucca.connection_factory.sphinx" class="Yucca\Component\ConnectionFactory\SphinxFactory">
            <tag name="yucca.connection_factory" alias="sphinx"/>
        </service>

        <service id="yucca.validator.unique" class="Yucca\Validator\Constraints\UniqueEntityValidator">
            <argument type="service" id="yucca.selector_manager" />
            <argument type="service" id="yucca.entity_manager" />
            <tag name="validator.constraint_validator" alias="yucca.validator.unique" />
        </service>

        <service id="form.type.yucca_entity" class="Yucca\Form\Type\YuccaEntityType">
            <tag name="form.type"/>
            <argument type="service" id="yucca.entity_manager" />
        </service>

        <service id="form.type.yucca_entity_id" class="Yucca\Form\Type\YuccaEntityIdType">
            <tag name="form.type" />
            <argument type="service" id="yucca.entity_manager" />
        </service>

        <service id="wlz_home.form.type.hidden_yucca_entity_id" class="Yucca\Form\Type\YuccaEntityIdHiddenType" parent="form.type.yucca_entity_id">
            <tag name="form.type" />
        </service>

        <service id="yucca.data_collector.collector" class="Yucca\Bundle\YuccaBundle\DataCollector\YuccaDataCollector">
            <tag name="data_collector" template="YuccaBundle:DataCollector:datacollector.html.twig" id="yucca"/>
            <argument type="service" id="yucca.data_collector.logger"/>
        </service>

        <service id="yucca.data_collector.logger" class="Yucca\Bundle\YuccaBundle\DataCollector\Logger">
        </service>
    </services>
</container>
